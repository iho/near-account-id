error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |                 panic!("account ID contains redundant separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains redundant separator', $DIR/src/validation.rs:20:17
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |                 panic!("account ID contains redundant separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |                 validate_const(id, idx + 1, true)
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE`
 --> src/tests/wrong_near_handlers/errors.rs:2:30
  |
2 | const ALICE: &AccountIdRef = AccountIdRef::new_or_panic("0__0");
  |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |         _ => panic!("account ID contains invalid char"),
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |         _ => panic!("account ID contains invalid char"),
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE1`
 --> src/tests/wrong_near_handlers/errors.rs:3:31
  |
3 | const ALICE1: &AccountIdRef = AccountIdRef::new_or_panic("@near");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/account_id_ref.rs
  |
  |             panic!("account ID is too short")
  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID is too short', $DIR/src/account_id_ref.rs:66:13
  |
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |             panic!("account ID is too short")
  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE2`
 --> src/tests/wrong_near_handlers/errors.rs:4:31
  |
4 | const ALICE2: &AccountIdRef = AccountIdRef::new_or_panic("a");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/account_id_ref.rs
  |
  |             panic!("account ID is too short")
  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID is too short', $DIR/src/account_id_ref.rs:66:13
  |
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |             panic!("account ID is too short")
  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE3`
 --> src/tests/wrong_near_handlers/errors.rs:5:31
  |
5 | const ALICE3: &AccountIdRef = AccountIdRef::new_or_panic("A");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |         _ => panic!("account ID contains invalid char"),
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |         _ => panic!("account ID contains invalid char"),
  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE4`
 --> src/tests/wrong_near_handlers/errors.rs:6:31
  |
6 | const ALICE4: &AccountIdRef = AccountIdRef::new_or_panic("Abc");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |                 panic!("account ID starts with char separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID starts with char separator', $DIR/src/validation.rs:22:17
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |                 panic!("account ID starts with char separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE5`
 --> src/tests/wrong_near_handlers/errors.rs:7:31
  |
7 | const ALICE5: &AccountIdRef = AccountIdRef::new_or_panic("-near");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |         panic!("account ID ends with char separator")
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID ends with char separator', $DIR/src/validation.rs:10:9
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |         panic!("account ID ends with char separator")
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |                 validate_const(id, idx + 1, true)
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 3 additional calls inside `near_account_id::validation::validate_const` ...]
 --> src/validation.rs
  |
  |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
  |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE6`
 --> src/tests/wrong_near_handlers/errors.rs:8:31
  |
8 | const ALICE6: &AccountIdRef = AccountIdRef::new_or_panic("near-");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
 --> src/validation.rs
  |
  |                 panic!("account ID starts with char separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID starts with char separator', $DIR/src/validation.rs:22:17
  |
note: inside `near_account_id::validation::validate_const`
 --> src/validation.rs
  |
  |                 panic!("account ID starts with char separator")
  |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
 --> src/account_id_ref.rs
  |
  |         validate_const(id.as_bytes(), 0, false);
  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE7`
 --> src/tests/wrong_near_handlers/errors.rs:9:31
  |
9 | const ALICE7: &AccountIdRef = AccountIdRef::new_or_panic("-near-");
  |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         panic!("account ID ends with char separator")
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID ends with char separator', $DIR/src/validation.rs:10:9
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         panic!("account ID ends with char separator")
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 3 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE8`
  --> src/tests/wrong_near_handlers/errors.rs:10:31
   |
10 | const ALICE8: &AccountIdRef = AccountIdRef::new_or_panic("near.");
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID starts with char separator', $DIR/src/validation.rs:22:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE9`
  --> src/tests/wrong_near_handlers/errors.rs:11:31
   |
11 | const ALICE9: &AccountIdRef = AccountIdRef::new_or_panic(".near");
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 3 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE10`
  --> src/tests/wrong_near_handlers/errors.rs:12:32
   |
12 | const ALICE10: &AccountIdRef = AccountIdRef::new_or_panic("near@");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE11`
  --> src/tests/wrong_near_handlers/errors.rs:13:32
   |
13 | const ALICE11: &AccountIdRef = AccountIdRef::new_or_panic("@near");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE12`
  --> src/tests/wrong_near_handlers/errors.rs:14:32
   |
14 | const ALICE12: &AccountIdRef = AccountIdRef::new_or_panic("неар");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE13`
  --> src/tests/wrong_near_handlers/errors.rs:15:32
   |
15 | const ALICE13: &AccountIdRef = AccountIdRef::new_or_panic("@@@@@");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains redundant separator', $DIR/src/validation.rs:20:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE14`
  --> src/tests/wrong_near_handlers/errors.rs:16:32
   |
16 | const ALICE14: &AccountIdRef = AccountIdRef::new_or_panic("0__0");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains redundant separator', $DIR/src/validation.rs:20:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE15`
  --> src/tests/wrong_near_handlers/errors.rs:17:32
   |
17 | const ALICE15: &AccountIdRef = AccountIdRef::new_or_panic("0_-_0");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains redundant separator', $DIR/src/validation.rs:20:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE16`
  --> src/tests/wrong_near_handlers/errors.rs:18:32
   |
18 | const ALICE16: &AccountIdRef = AccountIdRef::new_or_panic("0_-_0");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID starts with char separator', $DIR/src/validation.rs:22:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE17`
  --> src/tests/wrong_near_handlers/errors.rs:19:32
   |
19 | const ALICE17: &AccountIdRef = AccountIdRef::new_or_panic("..");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains redundant separator', $DIR/src/validation.rs:20:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID contains redundant separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE18`
  --> src/tests/wrong_near_handlers/errors.rs:20:32
   |
20 | const ALICE18: &AccountIdRef = AccountIdRef::new_or_panic("a..near");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE19`
  --> src/tests/wrong_near_handlers/errors.rs:21:32
   |
21 | const ALICE19: &AccountIdRef = AccountIdRef::new_or_panic("nEar");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID starts with char separator', $DIR/src/validation.rs:22:17
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 panic!("account ID starts with char separator")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE20`
  --> src/tests/wrong_near_handlers/errors.rs:22:32
   |
22 | const ALICE20: &AccountIdRef = AccountIdRef::new_or_panic("_bowen");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 4 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE21`
  --> src/tests/wrong_near_handlers/errors.rs:23:32
   |
23 | const ALICE21: &AccountIdRef = AccountIdRef::new_or_panic("hello world");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/account_id_ref.rs
   |
   |             panic!("account ID is too long")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID is too long', $DIR/src/account_id_ref.rs:68:13
   |
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |             panic!("account ID is too long")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE22`
  --> src/tests/wrong_near_handlers/errors.rs:24:32
   |
24 |   const ALICE22: &AccountIdRef = AccountIdRef::new_or_panic(
   |  ________________________________^
25 | |     "abcdefghijklmnopqrstuvwxyz.abcdefghijklmnopqrstuvwxyz.abcdefghijklmnopqrstuvwxyz",
26 | | );
   | |_^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/account_id_ref.rs
   |
   |             panic!("account ID is too long")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID is too long', $DIR/src/account_id_ref.rs:68:13
   |
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |             panic!("account ID is too long")
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE23`
  --> src/tests/wrong_near_handlers/errors.rs:28:5
   |
28 |     AccountIdRef::new_or_panic("01234567890123456789012345678901234567890123456789012345678901234");
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 6 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 6 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 3 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE24`
  --> src/tests/wrong_near_handlers/errors.rs:30:32
   |
30 | const ALICE24: &AccountIdRef = AccountIdRef::new_or_panic("some-complex-address@gmail.com");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the evaluated program panicked at 'account ID contains invalid char', $DIR/src/validation.rs:27:14
   |
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         _ => panic!("account ID contains invalid char"),
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: [... 5 additional calls inside `near_account_id::validation::validate_const` ...]
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |                 validate_const(id, idx + 1, true)
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `near_account_id::validation::validate_const`
  --> src/validation.rs
   |
   |         b'a'..=b'z' | b'0'..=b'9' => validate_const(id, idx + 1, false),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `AccountIdRef::new_or_panic`
  --> src/account_id_ref.rs
   |
   |         validate_const(id.as_bytes(), 0, false);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
note: inside `ALICE25`
  --> src/tests/wrong_near_handlers/errors.rs:31:32
   |
31 | const ALICE25: &AccountIdRef = AccountIdRef::new_or_panic("sub.buy_d1gitz@atata@b0-rg.c_0_m");
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = note: this error originates in the macro `$crate::panic::panic_2021` which comes from the expansion of the macro `panic` (in Nightly builds, run with -Z macro-backtrace for more info)
